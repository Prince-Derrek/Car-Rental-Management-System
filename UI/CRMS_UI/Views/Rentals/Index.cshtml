@model List<CRMS_UI.ViewModels.Rentals.RentalViewModel>
@using CRMS_UI.ViewModels.Rentals
@{
    Layout = "_Layout";
    ViewData["Title"] = "Manage All Bookings";
}

<div class="py-8">
    <h1 class="text-3xl font-extrabold text-gray-900 mb-6">@ViewData["Title"]</h1>

    <!-- Display Feedback Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert"><span class="block sm:inline">@TempData["SuccessMessage"]</span></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert"><span class="block sm:inline">@TempData["ErrorMessage"]</span></div>
    }

    <!-- Rental List Table -->
    <div class="overflow-x-auto shadow-xl sm:rounded-lg bg-white">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Booking ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Vehicle</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Renter</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Duration</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Cost</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
                @foreach (var rental in Model)
                {
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">#@rental.Id</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@rental.MakeModel (@rental.Plate)</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@rental.RenterName</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@rental.StartDate.ToShortDateString() - @rental.EndDate.ToShortDateString()</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-green-600 font-bold">Ksh @rental.TotalCost.ToString("N0")</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            @{
                                // Why: Using role-specific colors for visual clarity
                                var badge = rental.Status switch
                                {
                                    BookingStatus.Pending => "bg-yellow-100 text-yellow-800",
                                    BookingStatus.Approved => "bg-indigo-100 text-indigo-800",
                                    BookingStatus.Active => "bg-green-100 text-green-800",
                                    BookingStatus.Completed => "bg-gray-100 text-gray-800",
                                    BookingStatus.Cancelled => "bg-red-100 text-red-800",
                                    _ => "bg-gray-100 text-gray-800"
                                };
                            }
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @badge">
                                @rental.StatusDisplay
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            @if (rental.Status == BookingStatus.Pending)
                            {
                                <!-- Approval Action (Owner Only) -->
                                <form asp-controller="Rentals" asp-action="UpdateStatus" asp-route-id="@rental.Id" method="post" class="inline mr-2">
                                    <input type="hidden" name="newStatus" value="@((int)BookingStatus.Approved)" />
                                    <button type="submit" class="text-green-600 hover:text-green-900">Approve</button>
                                    @Html.AntiForgeryToken()
                                </form>

                                <!-- Cancellation Action (Owner Only) -->
                                <form asp-controller="Rentals" asp-action="UpdateStatus" asp-route-id="@rental.Id" method="post" class="inline" onsubmit="return confirm('Are you sure you want to CANCEL this booking?');">
                                    <input type="hidden" name="newStatus" value="@((int)BookingStatus.Cancelled)" />
                                    <button type="submit" class="text-red-600 hover:text-red-900">Cancel</button>
                                    @Html.AntiForgeryToken()
                                </form>
                            }
                            else if (rental.Status == BookingStatus.Approved || rental.Status == BookingStatus.Active)
                            {
                                <!-- Completion Action (Owner Only) -->
                                <form asp-controller="Rentals" asp-action="UpdateStatus" asp-route-id="@rental.Id" method="post" class="inline" onsubmit="return confirm('Mark this rental as COMPLETED?');">
                                    <input type="hidden" name="newStatus" value="@((int)BookingStatus.Completed)" />
                                    <button type="submit" class="text-blue-600 hover:text-blue-900">Mark Completed</button>
                                    @Html.AntiForgeryToken()
                                </form>
                            }
                            else
                            {
                                <span class="text-gray-400">No actions</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
